 - огромные модели
 - сложные правила валидации на все случаи жизни
 - сложные контроллеры
 - нетестируемый код

 ===============

 1 \          / 1
 2 -  save()  - 2   мы пытаемся решить все операции связанные
 3 /          \ 3   с Бизнес-логикой через одни метод save() и с помощью простого CRUD

 =================

CRUD

Сотрудники
    - создать
    - редактировать
    - удалить

Собеседования
    - создать
    - редактировать
    - удалить

=================

Бизнес-логика:
    - Пригласить на собеседование
    - Пройти собеседование
    - Отклонить собеседование
    - Принять
    - Назначить сотрудника на должность
    - Отправить в отпуск
    - Назначить премию
    - Уволить

====================

Взамен CRUD'a можно подумать по-человечески, и придумать такие методы
1 - join()
2 - edit()
3 - move()
4 - pass()
5 - reject()

Теперь подробнее

- Пригласить на собеседование
    $interview = Interview::join($date, $lastName, $firstName, $email);

    // т.е. мы создаем форму, которая отвечает только за приглашение на интервью и добавляем к ней правила валидации
    class Interview extends Model
    {
        public $date;
        public $lastName;
        public $firstName;
        public $email;

        public function rules()
        {
            return [
                [['date', 'lastName', 'firstName', 'email'], 'required']
            ];
        }
    }


- Пройти собеседование
    $employee = Employee::create(...);
    $interview->passBy($employee);

- Принять сотрудника
    $employee = Employee::create(...);

- Назначить сотрудника
    $assignment = Assignment::assign($employee, $position, $date);

и так далее используя ООП

====================

// используем RuntimeException
if (!$model->save()) {
    throw new RuntimeException('Saving error.');
}

====================

Используем Repository паттерн
создаем папку repositories
создаем файл InterviewRepository.php
    где будут находится методы
    find()
    add()
    save()

====================

Утиная типазация, если объект имеет метод похожий на то что нам нужно, то СКОРЕЕ ВСЕГО ЭТО ОН!
if (method_exist($event, 'getLogMessage')) {
    $log = new Log();
    $log->message = ...;
    $log->save();
}

====================



====================